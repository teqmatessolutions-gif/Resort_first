# Nginx configuration for TeqMates Resort Management System (HTTP only - temporary)
# Upstream backend server
upstream resort_backend {
    server 127.0.0.1:8000;
    keepalive 32;
}

# Main server block - HTTP only for now
server {
    server_name teqmates.com www.teqmates.com 139.84.211.200;
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    client_max_body_size 50M;
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    root /var/www/resort/Resort_first;

    # Landing Page - Root path (/)
    location = / {
        try_files /landingpage/index.html @backend;
    }

    # Landing page static assets
    location /assets/ {
        alias /var/www/resort/Resort_first/landingpage/assets/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Admin Dashboard - /admin routes
    location /admin {
        alias /var/www/resort/Resort_first/dasboard/build;
        try_files $uri $uri/ /admin/index.html;
    }

    # Admin dashboard static files
    location /admin/static/ {
        alias /var/www/resort/Resort_first/dasboard/build/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # User/Resort interface - /resort routes
    location /resort {
        alias /var/www/resort/Resort_first/userend/userend/build;
        try_files $uri $uri/ /resort/index.html;
    }

    # User interface static files
    location /resort/static/ {
        alias /var/www/resort/Resort_first/userend/userend/build/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # API routes - All API calls with /api/ prefix
    location /api/ {
        proxy_pass http://resort_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Additional API routes without /api/ prefix - more specific patterns
    location ~ ^/(rooms|packages|services|food-items|food-categories|food-orders|bookings|gallery|reviews|header-banner|resort-info|expenses|bill|users|roles|employees|auth)/ {
        proxy_pass http://resort_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://resort_backend;
        proxy_set_header Host $host;
        access_log off;
    }

    # Documentation
    location /docs {
        proxy_pass http://resort_backend;
        proxy_set_header Host $host;
    }

    # Uploads directory
    location /uploads/ {
        alias /var/www/resort/Resort_first/ResortApp/uploads/;
        expires 30d;
        add_header Cache-Control "public";
    }

    # Static files
    location /static/ {
        alias /var/www/resort/Resort_first/ResortApp/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Backend fallback
    location @backend {
        proxy_pass http://resort_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    access_log /var/log/nginx/resort_access.log;
    error_log /var/log/nginx/resort_error.log;
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/teqmates.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/teqmates.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.teqmates.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    if ($host = teqmates.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    listen 80;
    server_name teqmates.com www.teqmates.com 139.84.211.200;
    return 404; # managed by Certbot
}
